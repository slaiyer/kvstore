---
apiVersion: v1
kind: Service
metadata:
  name: router-service
  namespace: ${NS}
spec:
  selector:
    app: router
  ports:
  - name: router-port
    protocol: TCP
    port: 80
    targetPort: 8000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: router
  name: router-deployment
  namespace: ${NS}
spec:
  replicas: 5
  selector:
    matchLabels:
      app: router
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 2
  template:
    metadata:
      labels:
        app: router
    spec:
      containers:
      - name: router
        image: router:default
        ports:
        - containerPort: 8000
        envFrom:
        - secretRef:
            name: redis
        imagePullPolicy: IfNotPresent
        startupProbe:
          httpGet:
            path: /healthz/ready
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /healthz/live
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
